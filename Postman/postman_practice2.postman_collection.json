{
	"info": {
		"_postman_id": "187b9c3e-9ae9-4f7f-a439-c538ebb6e2ce",
		"name": "Postman_practice2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18465677"
	},
	"item": [
		{
			"name": "Req_1_code200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/first\r",
							"\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"// Проверить, что в body приходит правильный string.: This is the first responce from server!\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/first?{{name}}=Alex&{{age}}=18",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"first"
					],
					"query": [
						{
							"key": "{{name}}",
							"value": "Alex"
						},
						{
							"key": "{{age}}",
							"value": "18"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_2_parseJSON_user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_3\r",
							"\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"UI3_Test1_Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"const response_body = pm.response.json();\r",
							"\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"UI3_Test2_verify_resp-req_name_manual\", function(){\r",
							"    pm.expect(response_body.person.u_name[0]).to.eql(\"Kate\");\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"UI3_Test3_verify_resp-req_age_manual\", function(){\r",
							"    pm.expect(response_body.person.u_age).to.eql(32);\r",
							"});\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"UI3_Test4_verify_resp-req_salary_manual\", function(){\r",
							"    pm.expect(response_body.start_qa_salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"//7. Спарсить request.\r",
							"const request_body = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"UI3_Test5_verify_resp-req_name_auto\", function(){\r",
							"    pm.expect(request_body.name).to.eql(request_body.name);\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"UI3_Test6_verify_resp-req_age_auto\", function(){\r",
							"    pm.expect(request_body.age).to.eql(request_body.age);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Ui3_Test7_verify_resp-req_salary_auto\", function(){\r",
							"    pm.expect(request_body.salary).to.eql(request_body.salary);   \r",
							"});\r",
							"\r",
							"//11. Вывести в консоль параметр family из response. \r",
							"pm.test(\"UI3_Test8_output_console_response_family\", function(){\r",
							"    console.log(response_body.family);\r",
							"});\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"UI3_Test9_u_salary_1_5_year-resp_x_4\", function(){\r",
							"    pm.expect(response_body.person.u_salary_1_5_year).to.eql(request_body.salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kate",
							"type": "text"
						},
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_3_parseJSON_object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_3\r",
							"\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Oi3_Test1_status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"const response_body = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"const request_body = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"OI3_Test2_verify_resp-req_name \", function(){\r",
							" pm.expect(response_body.name).to.eql(request_body.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"OI3_Test3_verify_resp-req_age \", function(){\r",
							"    pm.expect(response_body.age).to.eql(request_body.age);\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"OI3_Test4_verify_resp-req_salary \", function(){\r",
							"    pm.expect(response_body.salary).to.eql(request_body.salary);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"pm.test(\"OI3_Test5_output_family_to_the_console \", function(){\r",
							"   console.log(response_body.family);\r",
							"});\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"OI3_Test6_verify_dog_has_name\", function(){\r",
							"pm.expect(Object.keys(response_body.family.pets.dog).includes('name')).to.eql(true);\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"OI3_Test7_verify_dog_has_age\", function(){\r",
							"pm.expect(Object.keys(response_body.family.pets.dog).includes('age')).to.eql(true);\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"OI3_Test8_verify_that_name_has_Luky\", function(){\r",
							"    pm.expect(response_body.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"OI3_Test9_verify_that_age_has_4\", function(){\r",
							"    pm.expect(response_body.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Kate\",\r\n    \"age\": \"32\",\r\n    \"salary\": 1500,\r\n    \"auth_token\": \"{{token}}\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name={{name}}&age={{age}}&salary={{salary}}",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_5_parseJSON_user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_2\r",
							"\r",
							"//1. Вставить параметр salary из окружения в request\r",
							"//2. Вставить параметр age из окружения в age\r",
							"//3. Вставить параметр name из окружения в name\r",
							"//4. Отправить запрос.\r",
							"\r",
							"//5. Статус код 200\r",
							"//6. Спарсить response body в json.\r",
							"let response_body = pm.response.json();\r",
							"\r",
							"\r",
							"//7. Спарсить request.\r",
							"const request_body = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"//Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"UI2_Test1_response should have 'start_qa_salary'\", function () {\r",
							"    pm.response.to.have.jsonBody(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"UI2_Test2_response should have 'qa_salary_after_6_months'\", function () {\r",
							"    pm.response.to.have.jsonBody(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"UI2_Test3_response should have 'qa_salary_after_12_months'\", function () {\r",
							"    pm.response.to.have.jsonBody(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"UI2_Test4_response should have 'qa_salary_after_1.5_year'\", function () {\r",
							"    pm.response.to.have.jsonBody(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"UI2_Test5_response should have 'qa_salary_after_3.5_years'\", function () {\r",
							"    pm.response.to.have.jsonBody(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"UI2_Test6_response should have 'person'\", function () {\r",
							"    pm.response.to.have.jsonBody(\"person\");\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"UI2_Test7_verify_resp-resq_start_qa_salary\", function(){\r",
							"    pm.expect(response_body.start_qa_salary).to.eql(request_body.salary);\r",
							"});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"UI2_Test8_verify_resp-resq_qa_salary_after_6_months\", function(){\r",
							"    pm.expect(response_body.qa_salary_after_6_months).to.eql(request_body.salary*2);\r",
							"});\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"UI2_Test9_verify_resp-resq_qa_salary_after_12_months\", function(){\r",
							"    pm.expect(response_body.qa_salary_after_12_months).to.eql(request_body.salary*2.7);\r",
							"\r",
							"});\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"UI2_Test10_verify_resp-resq_qa_salary_after_1.5_year\", function(){\r",
							"    pm.expect(response_body.person.u_salary_1_5_year).to.eql(request_body.salary*3.3);\r",
							"});\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.) There is no such parameter\r",
							"pm.test(\"UI2_Test11_verify_resp-resq_qa_salary_after_3.5_years\", function(){\r",
							"    pm.expect(response_body.qa_salary_after_3_5_years_check).to.eql(request_body.salary*3.8);\r",
							"});\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"UI2_Test12_verify_resp-resq_u_name_salary\", function(){\r",
							"       pm.expect(response_body.person.u_name[1]).to.eql(request_body.salary);\r",
							"});\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"UI2_Test13_verify_resp-resq_u_age\", function(){\r",
							"    pm.expect(response_body.person.u_age).to.eql(request_body.age);\r",
							"});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"UI2_Test14_verify_resp-resq_u_salary_5_years\", function(){\r",
							"    pm.expect(response_body.person.u_salary_5_years).to.eql(request_body.salary*4.2);\r",
							"});\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"pm.test(\"UI2_Test15_output_console_person_elements\", function(){\r",
							"for (let i in response_body.person) {\r",
							"        }\r",
							"         console.log(response_body.person);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Kate\",\r\n    \"age\": {{age}},\r\n    \"salary\": {{salary}},\r\n    \"auth_token\": \"{{token}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/user_info",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_4_parseJSON_object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_4\r",
							"\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"const response_body = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"const request_body = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"OI4_Test1_verify resp-resq_name\", function(){\r",
							"     pm.expect(response_body.name).to.eql(request_body.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"OI4_Test2_verify resp-resq_age\", function(){\r",
							"     pm.expect(response_body.age).to.eql(request_body.age);\r",
							"    });\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"pm.test(\"OI4_Test3_output_request_console_salary\", function(){\r",
							"     console.log(request_body.salary);\r",
							"    });\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"pm.test(\"OI4_Test4_output_response_console_salary\", function(){\r",
							"     console.log(response_body.salary);\r",
							"    });\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"pm.test(\"OI4_Test5_output_response_console_salary_0\", function(){\r",
							"     console.log(response_body.salary[0]);\r",
							"    });\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"pm.test(\"OI4_Test6_output_response_console_salary_1\", function(){\r",
							"     console.log(response_body.salary[1]);\r",
							"    });\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"pm.test(\"OI4_Test7_output_response_console_salary_2\", function(){\r",
							"     console.log(response_body.salary[2]);\r",
							"    });\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"OI4_Test8_verify_resp-resq_salary_0\", function(){\r",
							"     pm.expect(response_body.salary[0]).to.eql(request_body.salary);\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"OI4_Test9_verify_resp-resq_salary_1\", function(){\r",
							"     pm.expect(response_body.salary[1]).to.eql(request_body.salary*2);\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"OI4_Test10_verify_resp-resq_salary_2\", function(){\r",
							"     pm.expect(response_body.salary[2]).to.eql(request_body.salary*3);\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"//16. Создать в окружении переменную age\r",
							"//17. Создать в окружении переменную salary\r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"pm.test(\"OI4_Test11_set_environment_var_name\", function(){\r",
							"     pm.environment.set(\"name\", \"John5\");\r",
							"});\r",
							"\r",
							"//19. Передать в окружение переменную age\r",
							"pm.test(\"OI4_Test12_set_environment_var_age\", function(){\r",
							"     pm.environment.set(\"age\", 15);\r",
							"});\r",
							"\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.test(\"OI4_Test13_set_environment_var_salary\", function(){\r",
							"     pm.environment.set(\"salary\", 3000);\r",
							"});\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"pm.test(\"OI4_Test14_output_console_salary_elements\", function(){\r",
							"for (let i in response_body.salary) {\r",
							"        }\r",
							"        console.log(response_body.salary);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Kate\",\r\n    \"age\": {{age}},\r\n    \"salary\": {{salary}},\r\n    \"auth_token\": \"{{token}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=John&age=55&salary=10000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "John"
						},
						{
							"key": "age",
							"value": "55"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		}
	]
}